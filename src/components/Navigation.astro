---
interface Props {
  currentPage: string;
}

const { currentPage } = Astro.props;
---

<nav class="relative">
  <!-- Header with Logo and Hamburger -->
  <div class="flex items-center justify-between">
    <!-- Logo/Brand -->
    <a href="/" class="flex items-center space-x-3 hover:opacity-80 transition-opacity group">
      <div class="w-10 h-10 bg-gradient-to-br from-sky-500 to-cyan-500 rounded-xl flex items-center justify-center shadow-sm group-hover:shadow-md transition-shadow">
        <span class="text-white font-bold text-sm">KR</span>
      </div>
      <div>
        <h1 class="text-lg font-bold text-gray-900">Karen Rabins, LCSW</h1>
        <p class="text-xs text-sky-600 font-medium">Licensed Clinical Social Worker</p>
      </div>
    </a>
    
    <!-- Desktop Navigation -->
    <div class="hidden md:flex items-center space-x-8">
      <a href="/" class={currentPage === 'home' ? 'text-sky-600 font-semibold' : 'text-gray-700 hover:text-sky-600 transition-colors font-medium'}>
        Home
      </a>
      <a href="/about" class={currentPage === 'about' ? 'text-sky-600 font-semibold' : 'text-gray-700 hover:text-sky-600 transition-colors font-medium'}>
        About
      </a>
      <a href="/treatment-approaches" class={currentPage === 'treatment' ? 'text-sky-600 font-semibold' : 'text-gray-700 hover:text-sky-600 transition-colors font-medium'}>
        Treatment Approaches
      </a>
      <a href="/what-to-expect" class={currentPage === 'expect' ? 'text-sky-600 font-semibold' : 'text-gray-700 hover:text-sky-600 transition-colors font-medium'}>
        What to Expect
      </a>
      <a href="/contact" class="inline-flex items-center gap-2 bg-gradient-to-r from-sky-500 to-cyan-500 text-white px-6 py-3 rounded-lg font-medium hover:shadow-lg hover:-translate-y-0.5 transition-all duration-200 min-h-[44px]">
        Contact
      </a>
    </div>
    
    <!-- Mobile Hamburger Button -->
    <button id="mobile-menu-button" class="md:hidden p-2 text-gray-700 hover:text-sky-600 focus:outline-none focus:ring-2 focus:ring-sky-500 focus:ring-offset-2 rounded-lg" aria-label="Toggle mobile menu">
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>
  </div>
  
  <!-- Mobile Menu Overlay -->
  <div id="mobile-menu" class="hidden md:hidden absolute top-full left-0 right-0 bg-white shadow-xl border border-gray-100 rounded-2xl mt-4 z-50 opacity-0 scale-95 transition-all duration-200">
    <div class="flex flex-col p-6 space-y-4">
      <a href="/" class={currentPage === 'home' ? 'text-sky-600 font-semibold py-3 px-4 rounded-lg bg-sky-50' : 'text-gray-700 hover:text-sky-600 hover:bg-gray-50 transition-colors font-medium py-3 px-4 rounded-lg'}>
        Home
      </a>
      <a href="/about" class={currentPage === 'about' ? 'text-sky-600 font-semibold py-3 px-4 rounded-lg bg-sky-50' : 'text-gray-700 hover:text-sky-600 hover:bg-gray-50 transition-colors font-medium py-3 px-4 rounded-lg'}>
        About
      </a>
      <a href="/treatment-approaches" class={currentPage === 'treatment' ? 'text-sky-600 font-semibold py-3 px-4 rounded-lg bg-sky-50' : 'text-gray-700 hover:text-sky-600 hover:bg-gray-50 transition-colors font-medium py-3 px-4 rounded-lg'}>
        Treatment Approaches
      </a>
      <a href="/what-to-expect" class={currentPage === 'expect' ? 'text-sky-600 font-semibold py-3 px-4 rounded-lg bg-sky-50' : 'text-gray-700 hover:text-sky-600 hover:bg-gray-50 transition-colors font-medium py-3 px-4 rounded-lg'}>
        What to Expect
      </a>
      <a href="/contact" class="inline-flex items-center gap-2 bg-gradient-to-r from-sky-500 to-cyan-500 text-white px-6 py-3 rounded-lg font-medium hover:shadow-lg transition-all duration-200 min-h-[44px] mt-2">
        Contact
      </a>
    </div>
  </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const menuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (menuButton && mobileMenu) {
      menuButton.addEventListener('click', function() {
        if (mobileMenu.classList.contains('hidden')) {
          mobileMenu.classList.remove('hidden');
          // Force reflow
          mobileMenu.offsetHeight;
          mobileMenu.classList.remove('opacity-0', 'scale-95');
          mobileMenu.classList.add('opacity-100', 'scale-100');
        } else {
          mobileMenu.classList.remove('opacity-100', 'scale-100');
          mobileMenu.classList.add('opacity-0', 'scale-95');
          setTimeout(() => {
            mobileMenu.classList.add('hidden');
          }, 200);
        }
      });
      
      // Close menu when clicking outside
      document.addEventListener('click', function(event) {
        if (!menuButton.contains(event.target as Node) && !mobileMenu.contains(event.target as Node)) {
          mobileMenu.classList.remove('opacity-100', 'scale-100');
          mobileMenu.classList.add('opacity-0', 'scale-95');
          setTimeout(() => {
            mobileMenu.classList.add('hidden');
          }, 200);
        }
      });
      
      // Close menu when pressing Escape
      document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
          mobileMenu.classList.remove('opacity-100', 'scale-100');
          mobileMenu.classList.add('opacity-0', 'scale-95');
          setTimeout(() => {
            mobileMenu.classList.add('hidden');
          }, 200);
        }
      });
    }
  });
</script>